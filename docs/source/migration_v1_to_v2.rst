Migration from v1 to v2
=======================
On `chzzkpy` supports the official API provied by v2 from `CHZZK Developer Center <https://developers.chzzk.naver.com/>`_.
It is not that chzzkpy can no longer use the unofficial API.
The features provided by the official API are lacking in comparison to features such as mission donation event handler.
Naver Corporation has announced that it does not allow the use of unofficial APIs, but will not block the use of unofficial APIs as long as it does not interfere with the services.
However, if there are too many abnormal requests, Naver Corporation may take block to protect your account.

The developers of chzzkpy package cannot be responsible for any issues caused by using the unofficial API.
We recommended using the official API unless you are using a chatbot for personal use.

The official API and unofficial API are separate SDK packages, but we have developed this pacakge to be as similar as possible.

This document explains how to migrate from unofficial API(v1.x.x) to official API(v2.x.x).


Modify package name
-------------------
The package that provide official APIs and package that provide unofficial APIs are separated from each other.
We need to modify source code as shown in the code block below.

.. code-block:: python

    # Before
    from chzzkpy.chat import ChatClient

    # After
    from chzzkpy.unofficial.chat import ChatClient  # Unofficial API
    from chzzkpy import Client  # Official API

As perviously announced, the package that provides the official API has replaced the default package provided unofficial API as of Augest 1st, 2025.
To use the unofficial API, you must import `chzzkpy.unofficial` package.

Client Authentication
---------------------
The client of chzzkpy v1 pacakge uses `NID_AUT` and `NID_SES` cookies for authentication.
Meanwhile, the client of chzzkpy v2 package uses `Client ID` and `Client Secret` value from generated by `CHZZK Developer Center <https://developers.chzzk.naver.com/>`_.

.. code-block:: python

    # Before
    client = ChatClient()
    client.login("NID_AUT", "NID_SES")

    # After
    client = Client("client_id", "client_secret")

The user authentication is required to send and receive chat messages or to get followers info from the channel.
